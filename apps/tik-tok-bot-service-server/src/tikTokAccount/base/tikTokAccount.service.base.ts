/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TikTokAccount as PrismaTikTokAccount } from "@prisma/client";

export class TikTokAccountServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TikTokAccountCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tikTokAccount.count(args);
  }

  async tikTokAccounts(
    args: Prisma.TikTokAccountFindManyArgs
  ): Promise<PrismaTikTokAccount[]> {
    return this.prisma.tikTokAccount.findMany(args);
  }
  async tikTokAccount(
    args: Prisma.TikTokAccountFindUniqueArgs
  ): Promise<PrismaTikTokAccount | null> {
    return this.prisma.tikTokAccount.findUnique(args);
  }
  async createTikTokAccount(
    args: Prisma.TikTokAccountCreateArgs
  ): Promise<PrismaTikTokAccount> {
    return this.prisma.tikTokAccount.create(args);
  }
  async updateTikTokAccount(
    args: Prisma.TikTokAccountUpdateArgs
  ): Promise<PrismaTikTokAccount> {
    return this.prisma.tikTokAccount.update(args);
  }
  async deleteTikTokAccount(
    args: Prisma.TikTokAccountDeleteArgs
  ): Promise<PrismaTikTokAccount> {
    return this.prisma.tikTokAccount.delete(args);
  }
}
